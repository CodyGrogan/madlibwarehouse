{"version":3,"sources":["logo.svg","components/Navbar.js","components/Home.js","components/Create.js","components/Game.js","components/PlayItem.js","components/Play.js","components/ProfileItem.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","a","console","log","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithPopup","getAuth","signOutUser","signOut","onAuthStateChanged","user","signInButtonElement","document","getElementById","signOutButtonElement","addEventListener","userName","currentUser","displayName","hidden","innerText","class","className","type","id","to","onClick","onclick","Home","submitTemplate","input","value","title","parenthesesArray1","parenthesesArray2","wordArray","i","length","letter","charAt","alert","push","index","secondindex","removed","slice","hashstring","replace","madlib","wordList","story","uid","name","plays","data","jsonstring","JSON","stringify","fetch","method","headers","body","then","response","json","catch","error","submitData","click","Create","placeholder","cols","rows","tabindex","Game","storyObject","storyLength","useState","submittedWords","setSubmittedWords","currentWord","setCurrentWord","progress","setProgress","progressWidth","setProgressWidth","submitWord","newWord","newwordarray","progressValue","progressString","useEffect","newstory","hash","createStory","onKeyDown","e","key","autofocus","role","style","width","resetGame","PlayItem","storyObj","setStory","Play","keyValue","setKeyValue","storyArray","setStoryArray","initialLoad","storypicked","storyObjectNull","frame","tablediv","pickedStory","setPickedStory","pickStory","newArray","newjsx","ProfileItem","deleteStory","Profile","setUserName","userStories","setUserStories","totalMadlibs","setTotalMadlibs","totalPlays","setTotalPlays","listLoaded","setListLoaded","getUserStories","pathstring","totalplays","_id","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","authStateObserver","window","signIn","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a6ce8da0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Link } from \"react-router-dom\";\r\nimport {\r\n    getAuth,\r\n    onAuthStateChanged,\r\n    GoogleAuthProvider,\r\n    signInWithPopup,\r\n    signOut,\r\n  } from 'firebase/auth';\r\n\r\n  \r\n\r\n\r\n\r\nfunction Navbar(props){\r\n\r\n    \r\n  async function signIn() {\r\n    console.log(\"sign in button pressed\")\r\n  \r\n    var provider = new GoogleAuthProvider();\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n      });\r\n    await signInWithPopup(getAuth(), provider);\r\n  \r\n  }\r\n\r\n  function signOutUser() {\r\n \r\n    signOut(getAuth());\r\n  \r\n  }\r\n\r\n  function getUserName() {\r\n    return getAuth().currentUser.displayName;\r\n  \r\n  }\r\n  \r\n  function isUserSignedIn() {\r\n    return !!getAuth().currentUser;\r\n  \r\n  }\r\n  \r\n  \r\n\r\nfunction navauthStateObserver(user) {\r\n    if (user) {\r\n      \r\nvar signInButtonElement = document.getElementById('sign-in');\r\nvar signOutButtonElement = document.getElementById('sign-out');\r\n  signOutButtonElement.addEventListener('click', signOutUser);\r\n      console.log(\"user is signed in\")\r\n      var userName = getUserName();\r\n      signInButtonElement.hidden = true;\r\n      signOutButtonElement.hidden = false;\r\n      let profileLink = document.getElementById('profileLink');\r\n      profileLink.innerText =  `${userName}'s Profile`\r\n      \r\n  \r\n    }\r\n\r\n    else{\r\n        \r\nvar signInButtonElement = document.getElementById('sign-in');\r\nvar signOutButtonElement = document.getElementById('sign-out');\r\n  signOutButtonElement.addEventListener('click', signOutUser);\r\n      signInButtonElement.hidden = false;\r\n      signOutButtonElement.hidden = true;\r\n      \r\n      let profileLink = document.getElementById('profileLink');\r\n      profileLink.innerText =  `Profile`\r\n    }\r\n  }  \r\n  \r\nonAuthStateChanged(getAuth(), navauthStateObserver);\r\n\r\n\r\n    return(\r\n        <div>\r\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <h1>MadlibWarehouse</h1>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n            \r\n\r\n                    <Link className=\"navbar-brand nav-link\" to='/'> Home</Link>\r\n                 \r\n                    <Link className=\"navbar-brand nav-link\" to='/play'>Play</Link>\r\n              \r\n                    <Link className=\"navbar-brand nav-link\" to='/create'>Create</Link>   \r\n                    \r\n                    <Link className=\"navbar-brand nav-link\" to='/profile' id='profileLink'>Profile</Link>   \r\n                    \r\n                    <button type=\"button\" onClick={signIn} className='navbar-brand btn btn-outline-primary'  id=\"sign-in\" onclick=\"signIn()\" >\r\n                    <i className=\"material-icons\">account_circle</i>Sign-in with Google\r\n                  </button>\r\n                  <button hidden type=\"button\" onclick={signOut} className=\"navbar-brand btn btn-warning\" id='sign-out'>Sign Out</button>\r\n                  \r\n            </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import react from 'react';\r\nimport Navbar from './Navbar';\r\n\r\nfunction Home(props){\r\n\r\n    return(\r\n\r\n        <div>\r\n            <Navbar/>\r\n            <h2>Welcome to Madlib Warehouse</h2>\r\n      <p>Play, Create, and Share Madlibs</p>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import Navbar from \"./Navbar\";\r\nimport {\r\n    getAuth,\r\n    onAuthStateChanged,\r\n    GoogleAuthProvider,\r\n    signInWithPopup,\r\n    signOut,\r\n  } from 'firebase/auth';\r\n\r\n  function isUserSignedIn() {\r\n    return !!getAuth().currentUser;\r\n  \r\n  }\r\n\r\nfunction submitTemplate(){\r\n\r\n\r\n    if (isUserSignedIn() == true){\r\n    let input = document.getElementById('madlibtextarea').value;\r\n    let title = document.getElementById('storytitle').value;\r\n    console.log(input);\r\n\r\n    let parenthesesArray1 = [];\r\n    let parenthesesArray2 = []\r\n    let wordArray = [];\r\n    let slicedString = '';\r\n\r\n    for (let i = 0; i < input.length; i++){\r\n\r\n        let letter = input.charAt(i);\r\n        if (letter == '#'){\r\n            alert('invlaid character #')\r\n            break;\r\n        }\r\n\r\n        \r\n       else if (letter == '('){\r\n            parenthesesArray1.push(i);\r\n        }\r\n        else if (letter == ')'){\r\n            parenthesesArray2.push(i);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    if (parenthesesArray1.length != parenthesesArray2.length || parenthesesArray2.length == 0 || title.length < 1){\r\n\r\n        alert('Your story needs a title must have at least one word request in ( ). ')\r\n\r\n        \r\n    }\r\n    else{\r\n \r\n    for (let i = 0; i < parenthesesArray1.length; i++){\r\n\r\n        let index = parenthesesArray1[i];\r\n        //the second index number needs to be higher by one to include ')'\r\n        let secondindex = parenthesesArray2[i] + 1;\r\n        let removed = input.slice(index, secondindex);\r\n        wordArray.push(removed);\r\n        \r\n        console.log(removed)\r\n        console.log(wordArray);\r\n      \r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n    for (let i = 0; i < wordArray.length; i++){\r\n\r\n        let hashstring = '#' + i;\r\n        input = input.replace(wordArray[i], hashstring);\r\n\r\n        //later when reading a madlib from the database, the words\r\n        //given by the player will be inserted at the index of each #\r\n    }\r\n\r\n    // get the indecies of each ( and )\r\n\r\n\r\n        console.log(parenthesesArray1);\r\n        console.log(input);\r\n\r\n        let madlib = {\r\n            wordList: wordArray,\r\n            story: input,\r\n            title: title,\r\n            uid: getAuth().currentUser.uid,\r\n            name: getAuth().currentUser.displayName,\r\n            plays: 0\r\n\r\n        }\r\n\r\n\r\n        document.getElementById('madlibtextarea').value = '';\r\n        document.getElementById('storytitle').value = '';\r\n        console.log(madlib);\r\n        submitData(madlib);\r\n        openModal();\r\n\r\n     }\r\n\r\n    }\r\n    else{\r\n        alert(\"please sign in\");\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction submitData(data){\r\n    let jsonstring = JSON.stringify(data);\r\n    let postpath = '/create/post'           \r\n \r\n        \r\n    fetch(postpath, {\r\n        method: 'POST', \r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n        body: jsonstring,\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.log('Success:', data);\r\n    })\r\n    .catch((error) => {\r\n        console.error('Error:', error);\r\n    });\r\n}\r\n\r\nfunction openModal(){\r\n    let modal = document.getElementById('openModal');\r\n    modal.click();\r\n}\r\n\r\n\r\nfunction Create(props){\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <p>This is Create</p>\r\n\r\n\r\n            <p>In this section, write your own mad lib template</p>\r\n\r\n            <p>When you write your story, request words by putting them in parenthesis.</p>\r\n            <p>ex: Harold was a (adjective) (animal). He loves to (verb).</p>\r\n            <input type='text' id='storytitle' placeholder={'Write Title Here'}></input> <br/>\r\n\r\n            <textarea id='madlibtextarea' cols='50' rows=\"10\" placeholder=\"Write story here\"></textarea>\r\n            <br/>\r\n            <button type=\"button\" onClick={submitTemplate} className=\"btn btn-primary\">Submit</button>\r\n       \r\n        \r\n\r\n                    <button hidden id='openModal' type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                    Launch demo modal\r\n                    </button>\r\n\r\n                    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            Your madlib template has been submitted.\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;","import {useEffect, useState} from 'react';\r\n\r\nfunction Game(props){\r\n    let storyObject = props.storyObject;\r\n    let title = storyObject.title;\r\n    let wordList = storyObject.wordList;\r\n    let story = storyObject.story;\r\n    let storyLength = wordList.length;\r\n    const [submittedWords, setSubmittedWords] = useState([]);\r\n\r\n    const [currentWord, setCurrentWord] = useState(0); \r\n    const [progress, setProgress] = useState(0);\r\n    const [progressWidth, setProgressWidth] = useState('width:0')\r\n    \r\n    let submitWord = () => {\r\n        let input = document.getElementById('getWord');\r\n        let newWord = input.value;\r\n        let newwordarray = submittedWords;\r\n        newwordarray.push(newWord);\r\n        console.log(newwordarray);\r\n        setSubmittedWords(newwordarray);\r\n        input.value = '';\r\n        console.log(submittedWords);\r\n        setCurrentWord(currentWord + 1);\r\n        let sublength = submittedWords.length;\r\n        let wordlength = wordList.length;\r\n        let progressValue = (sublength/wordlength)*100;\r\n        console.log('progess =' + progressValue);\r\n        let progressString = `${progressValue}%`;\r\n        setProgress(progressValue);\r\n        setProgressWidth(progressString);\r\n        \r\n    }\r\n\r\n    let createStory = () =>{\r\n\r\n        let newstory = story;\r\n        for (let i = 0; i < wordList.length; i++){\r\n            let hash = '#' + i;\r\n            newstory = newstory.replace(hash, submittedWords[i]);\r\n\r\n        }\r\n        return newstory;\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(currentWord>wordList.length -1){\r\n            let wordInputDiv = document.getElementById('wordInputDiv');\r\n            wordInputDiv.hidden = true;\r\n            let newstory = createStory();\r\n            document.getElementById('storyP').innerText= newstory;\r\n            document.getElementById('storyTitle').innerText = title;\r\n        }\r\n    },[currentWord]);\r\n\r\n   \r\n  \r\n    function enterKeyPressed(e){\r\n     \r\n    \r\n        if (e.key === 'Enter'){\r\n            submitWord();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <div id='storyDiv' class='card'>\r\n                <div class='card-header'>\r\n                    <h2 id='storyTitle'>{title}</h2>\r\n                </div>\r\n                <div class='card-body'>\r\n\r\n                <div id='wordInputDiv'>\r\n                <p>Please enter a {wordList[currentWord]}</p><br/>\r\n                <input type={'text'} onKeyDown={enterKeyPressed} id='getWord' autofocus></input><br/><br/>\r\n                <button id='textBtn' onClick={submitWord} type=\"button\" className=\"btn btn-primary\">Submit</button><br/>\r\n                <div class=\"progress\">\r\n                      <div class=\"progress-bar\" role=\"progressbar\" style={{width: progressWidth}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"> {submittedWords.length} / {storyLength}</div>\r\n                </div>\r\n              \r\n                </div>\r\n\r\n\r\n                    <p id='storyP'></p>\r\n                    <button onClick={props.resetGame} type='button' className='btn btn-warning btn-sm'>Reset</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","\r\n\r\nfunction PlayItem(props){\r\n    let storyObj = props.storyObject\r\n\r\n    let pickStory= ()=> {\r\n        props.setStory(storyObj);\r\n\r\n    }\r\n    return(\r\n        \r\n            <tr>\r\n                <td>{props.storyObject.title}</td>\r\n                <td>{props.storyObject.name}</td>\r\n                <td>{props.storyObject.plays}</td>\r\n                <td><button onClick={ () =>pickStory()} className=\"btn btn-primary btn-small\">Play</button></td>\r\n            </tr>\r\n        \r\n    )\r\n}\r\n\r\nexport default PlayItem;","import Navbar from \"./Navbar\";\r\nimport Game from \"./Game\";\r\nimport PlayItem from \"./PlayItem\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Mongoose } from \"mongoose\";\r\n\r\n\r\n// HOW THIS WILL WORK\r\n//Play page will display a list of PlayItem components\r\n//PlayItem components will be generated from reading randomly from the database\r\n//Play Item Components will have a title and a \"Play\" button\r\n//When the play button is clicked, the list will be hidden, and the game component loaded\r\n//the game components will be passed a prop \"madlibobj\" that contains the story and wordlist\r\n// the game component will have an input requesting each word\r\n//then it will replace all of the '#num' strings with the users new words.\r\n//then it will display it to the user.\r\n\r\n\r\n\r\n// currently the included storyObjects are for testing and will later be drawn from a database\r\nfunction Play(props){\r\n    const [keyValue, setKeyValue] = useState(0);  //this is necessary to make the Game component reset when the reset button is clicked.\r\n    const [storyArray, setStoryArray] = useState([]);\r\n    let initialLoad = false;\r\n    \r\n\r\nfunction getStories(){\r\n    console.log('get stories fired')\r\n\r\n        if (initialLoad == false){\r\n        initialLoad = true;\r\n        console.log('getstories about to fetch')\r\n        let pathstring = '/play/storylist'\r\n        fetch(pathstring).then(response => response.json()).then(function (data){\r\n            console.log(data);\r\n            let length = data.length;\r\n            let newArray = [];\r\n            for (let i = 0; i<length;i++){\r\n\r\n                let newjsx = <PlayItem storyObject = {data[i]} setStory={pickStory}/>\r\n                newArray.push(newjsx);\r\n                \r\n            }\r\n            setStoryArray(newArray);\r\n\r\n            \r\n        })\r\n    }\r\n    }\r\n\r\n    var storypicked = false;\r\n   \r\n    let storyObject = {\r\n        wordList: [\r\n            \"(adjective)\",\r\n            \"(Name)\",\r\n            \"(verb)\",\r\n            \"(food)\",\r\n            \"(noun)\"\r\n        ],\r\n        story: \"I once had a #0 pony named #1. He loved to #2 all night long. He ate #3 every morning. He had a favorite toy #4 that he slept with every night. \",\r\n        title: \"My Little Pony\",\r\n        name: 'Tester',\r\n        uid: 'testid',\r\n        plays: 0\r\n    };\r\n\r\n    let storyObject2=\r\n    {\r\n        wordList: [\r\n          \"(adjective)\",\r\n          \"(noun)\",\r\n          \"(verb)\"\r\n        ],\r\n        story: \"Rosa is a very #0 girl. She is my #1. I #2 her very much.\",\r\n        title: \"Hello Rosa\",\r\n        name: 'Tester',\r\n        uid: 'testid',\r\n        plays: 0\r\n      }\r\n\r\n      let storyObjectNull=\r\n      {\r\n          wordList: [\r\n           'null'\r\n          ],\r\n          story: \"null\",\r\n          title: \"null\"\r\n        }\r\n  \r\n        \r\n\r\n      \r\n    let frame = document.getElementById('gameFrame');\r\n    let tablediv = document.getElementById('tableDiv');\r\n\r\n    const [pickedStory, setPickedStory] = useState(storyObjectNull);\r\n\r\n\r\n      let pickStory = (story) =>{\r\n\r\n        console.log('pick story clicked')\r\n\r\n        console.log(story);\r\n        storypicked = true;\r\n        setPickedStory(story)\r\n        \r\n\r\n    }\r\n\r\n    let updatePlays = (story)=>{\r\n        let pathstring = '/play/updateplays';\r\n\r\n\r\n                    fetch(pathstring, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(story),\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n            console.log('Success:', data);\r\n            })\r\n            .catch((error) => {\r\n            console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    let resetGame = () =>{\r\n        setPickedStory(storyObjectNull);\r\n        let newkeyvalue = keyValue + 1;\r\n        setKeyValue(newkeyvalue);  //this causes the Game component to be remade\r\n        tablediv.hidden = false;\r\n        frame.hidden = true;\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n        if(pickedStory.title != 'null' && pickedStory.story != 'null' ){\r\n        console.log(storypicked + \"bool\")\r\n        updatePlays(pickedStory);\r\n        tablediv.hidden = true;\r\n        frame.hidden = false;\r\n        }\r\n        \r\n        \r\n    },[pickedStory]);\r\n\r\n    useEffect(() => {\r\n        console.log('component mounted')\r\n        getStories();\r\n      }, []);\r\n\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n\r\n            <p>Pick a story and play!</p>\r\n\r\n            <div id='tableDiv'>\r\n            <table className=\"table\">\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Author</th>\r\n                    <th>Plays</th>\r\n                    <th></th>\r\n                </tr>\r\n        \r\n           {storyArray}\r\n            </table>\r\n            </div>\r\n        <div hidden id='gameFrame'>\r\n            <Game key={keyValue} storyObject={pickedStory} resetGame={resetGame}/>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/* example story obj\r\n\r\n{\r\n    \"wordlist\": [\r\n        \"(adjective)\",\r\n        \"(Name)\",\r\n        \"(verb)\",\r\n        \"(food)\",\r\n        \"(noun)\"\r\n    ],\r\n    \"story\": \"I one had a #0 pony named #1. He loved to #2 all night long. He ate #3 every morning. He had a very toy #4 that he slept with every night. \",\r\n    \"title\": \"My Little Pony\"\r\n}\r\n\r\n\r\n{\r\n  wordList: [\r\n    \"(adjective)\",\r\n    \"(noun)\",\r\n    \"(verb)\"\r\n  ],\r\n  story: \"Rosa is a very #0 girl. She is my #1. I #2 her very much.\",\r\n  title: \"Hello Rosa\"\r\n}\r\n\r\n   <PlayItem storyObject={storyObject} setStory={pickStory}/>\r\n           \r\n           <PlayItem storyObject={storyObject2} setStory={pickStory}/>\r\n\r\n*/\r\n\r\nexport default Play;","\r\nfunction ProfileItem(props){\r\n    let storyObj = props.storyObject\r\n\r\n    let deleteStory= ()=> {\r\n        props.deleteStory(storyObj);\r\n\r\n    }\r\n    return(\r\n        \r\n            <tr>\r\n                <td>{props.storyObject.title}</td>\r\n        \r\n                <td>{props.storyObject.plays}</td>\r\n                <td><button onClick={ () =>deleteStory()} className=\"btn btn-danger btn-small\">Delete</button></td>\r\n            </tr>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProfileItem;","import Navbar from \"./Navbar\";\r\nimport {\r\n  getAuth,\r\n  onAuthStateChanged,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  signOut,\r\n} from 'firebase/auth';\r\nimport {useState, useEffect} from 'react';\r\nimport ProfileItem from \"./ProfileItem\";\r\n\r\n\r\nfunction Profile(props){\r\n\r\n\r\n        const [userName, setUserName] = useState(\"Please Sign In\");\r\n        const [userStories, setUserStories] = useState([]);\r\n        const [totalMadlibs, setTotalMadlibs] = useState(0);\r\n        const [totalPlays, setTotalPlays] = useState(0);\r\n        const [listLoaded, setListLoaded] = useState(false);\r\n        var initialLoad = false;\r\n        //temp obj for testing\r\n        let storyObject = {\r\n            wordList: [\r\n                \"(adjective)\",\r\n                \"(Name)\",\r\n                \"(verb)\",\r\n                \"(food)\",\r\n                \"(noun)\"\r\n            ],\r\n            story: \"I once had a #0 pony named #1. He loved to #2 all night long. He ate #3 every morning. He had a favorite toy #4 that he slept with every night. \",\r\n            title: \"My Little Pony\",\r\n            name: 'Tester',\r\n            uid: 'testid',\r\n            plays: 0\r\n        };\r\n\r\n\r\n        function getUserName() {\r\n            return getAuth().currentUser.displayName;\r\n        \r\n        }\r\n        \r\n        function isUserSignedIn() {\r\n            return !!getAuth().currentUser;\r\n        \r\n        }\r\n        \r\n        function authObserver(user){\r\n            if (user){\r\n                console.log('authstate changed')\r\n                let name = getAuth().currentUser.displayName;\r\n                setUserName(name);\r\n\r\n              \r\n                }\r\n             \r\n\r\n            else\r\n            {\r\n              \r\n                setUserName(\"Please Sign In\")\r\n                setListLoaded(false);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    function getUserStories(){\r\n        \r\n        if (initialLoad == false){\r\n            initialLoad = true;\r\n            let uid = getAuth().currentUser.uid;\r\n            \r\n            let pathstring = '/profile/getstory/' + uid;   \r\n        \r\n            console.log('getstories about to fetch')\r\n            console.log(\"pathstring is \"+pathstring)\r\n            \r\n            fetch(pathstring).then(response => response.json()).then(function (data){\r\n                console.log(data);\r\n                let length = data.length;\r\n                let newArray = [];\r\n                let totalplays = 0;\r\n                for (let i = 0; i<length;i++){\r\n    \r\n                    let newjsx = <ProfileItem storyObject = {data[i]} deleteStory={deleteStory}/>\r\n                    newArray.push(newjsx);\r\n                    totalplays = totalplays + data[i].plays;\r\n                }\r\n                setTotalMadlibs(length);\r\n                setTotalPlays(totalplays);\r\n                setUserStories(newArray);\r\n    \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    function deleteStory(storyObject){\r\n        console.log('delete button pressed')\r\n        let id = storyObject._id;\r\n        let postpath = '/profile/delete/' + id;\r\n        fetch(postpath, {\r\n            method: 'DELETE', \r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Success:', data);\r\n\r\n            //this only sometimes works immediately, fix this\r\n            setUserStories([]);\r\n            setListLoaded(false);\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n    \r\n    }\r\n        \r\n\r\n    useEffect(() => {\r\n        console.log('component mounted');\r\n        \r\n        console.log('initial load' + initialLoad)\r\n        if (initialLoad == false){\r\n        if (isUserSignedIn()==true){\r\n        getUserStories();\r\n        }\r\n        \r\n        }}, []);\r\n\r\n    useEffect(() => {\r\n        if (userName != 'Please Sign In'){\r\n            if (listLoaded == false){\r\n            setListLoaded(true);\r\n            getUserStories();\r\n            \r\n            }\r\n        }\r\n        else\r\n        {\r\n            setUserStories([]);\r\n        }\r\n    }, [userName, listLoaded]);\r\n    \r\n    onAuthStateChanged(getAuth(), authObserver);\r\n\r\n    return(\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-\">\r\n                    \r\n                    <h2 className='card-header' id='userNameTitle'>{userName}</h2>\r\n                            <div class=\"card-body\">\r\n                                <p>Total Madlibs Created: {totalMadlibs}</p>\r\n                                <p>Your Madlib's total plays: {totalPlays}</p>\r\n                            </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <table className=\"table col-md\">\r\n                                <tr>\r\n                                <th>Title</th>\r\n                                <th>Plays</th>\r\n                                <th>Delete</th>\r\n                                \r\n                            </tr>\r\n                            {userStories}\r\n\r\n                    </table>\r\n                </div>        \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//<ProfileItem storyObject={storyObject} deleteStory={deleteStory}/>\r\n                            \r\n\r\nexport default Profile;","import logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home';\nimport Create from './components/Create';\nimport Navbar from './components/Navbar';\nimport Play from './components/Play';\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport {\n  getAuth,\n  onAuthStateChanged,\n  GoogleAuthProvider,\n  signInWithPopup,\n  signOut,\n} from 'firebase/auth';\n\nimport Profile from './components/Profile';\n// Import the functions you need from the SDKs you need\n\nimport { initializeApp } from \"firebase/app\";\n\nimport { getAnalytics } from \"firebase/analytics\";\n\n\nconst firebaseConfig = {\n\n  apiKey: \"AIzaSyBD62sH1z9-cksAFFiRTXZmrhK3cKtV7nA\",\n\n  authDomain: \"madlibwarehouse.firebaseapp.com\",\n\n  projectId: \"madlibwarehouse\",\n\n  storageBucket: \"madlibwarehouse.appspot.com\",\n\n  messagingSenderId: \"675941850696\",\n\n  appId: \"1:675941850696:web:3bfcb52b7a1536aca9827d\",\n\n  measurementId: \"G-WMLDV4WNMT\"\n\n};\n\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\n\nconst analytics = getAnalytics(app);\n\n\nasync function signIn() {\n  console.log(\"sign in button pressed\")\n\n  var provider = new GoogleAuthProvider();\n  provider.setCustomParameters({\n      prompt: 'select_account'\n    });\n  await signInWithPopup(getAuth(), provider);\n\n}\n\nwindow.signIn = signIn;\n\nfunction signOutUser() {\n\n  signOut(getAuth());\n\n}\n\n\n\n  function authStateObserver(user) {\n    if (user) {\n      console.log(\"user is signed in\")\n      var userName = getUserName();\n  \n    }\n  }\n\nfunction initFirebaseAuth() {\n  onAuthStateChanged(getAuth(), authStateObserver);\n\n}\n\nfunction getUserName() {\n  return getAuth().currentUser.displayName;\n\n}\n\nfunction isUserSignedIn() {\n  return !!getAuth().currentUser;\n\n}\n\n\n\nfunction App() {\n  initFirebaseAuth();\n  return (\n    <div className=\"App\">\n      \n      <BrowserRouter>\n        <Routes>\n            <Route path='/' element={<Home/>}/>\n            <Route path='/create' element={<Create/>}/>\n            <Route path='/play' element={<Play/>}/>\n            <Route path='/profile' element={<Profile/>}/>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n\n<App/>\n      \n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}